// <auto-generated />
using System;
using BioTranan.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BioTranan.Core.Migrations
{
    [DbContext(typeof(BioTrananDbContext))]
    [Migration("20230417062539_HeroImageUrl")]
    partial class HeroImageUrl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("BioTranan.Core.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmountSeat")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BookingCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("ShowId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserEmail")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShowId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BioTranan.Core.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgeRestrictions")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Director")
                        .HasColumnType("TEXT");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeroImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaximumShows")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OriginalLanguage")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgeRestrictions = "15 år",
                            Description = "Oscar Schindler är en tysk affärsman under andra världskrigets slutskede som profiterar nazisternas utnyttjande av fängslande judar. Schindler växer till en hjälte som är beredd att ta stora risker för att hjälpa och skydda de judar han beslutar sig för att rädda.",
                            Director = "Steven Spielberg",
                            DurationMinutes = 195,
                            Genre = "Drama",
                            MaximumShows = 10,
                            OriginalLanguage = "Engelska",
                            ReleaseYear = 1993,
                            Title = "Schindler's List"
                        });
                });

            modelBuilder.Entity("BioTranan.Core.Entities.Salon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxSeats")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Salons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxSeats = 45,
                            Name = "Salong 1"
                        },
                        new
                        {
                            Id = 2,
                            MaxSeats = 45,
                            Name = "Salong 2"
                        });
                });

            modelBuilder.Entity("BioTranan.Core.Entities.Show", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("SalonId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subtitles")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("SalonId");

                    b.ToTable("Shows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new DateTime(2023, 4, 20, 19, 15, 0, 0, DateTimeKind.Unspecified),
                            Language = "Eng tal",
                            MovieId = 1,
                            Price = 90m,
                            SalonId = 1,
                            StartTime = new DateTime(2023, 4, 20, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Subtitles = "Sve text"
                        });
                });

            modelBuilder.Entity("BioTranan.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "user123@mail.com"
                        });
                });

            modelBuilder.Entity("BioTranan.Core.Entities.Booking", b =>
                {
                    b.HasOne("BioTranan.Core.Entities.Show", "Show")
                        .WithMany()
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Show");
                });

            modelBuilder.Entity("BioTranan.Core.Entities.Show", b =>
                {
                    b.HasOne("BioTranan.Core.Entities.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioTranan.Core.Entities.Salon", "Salon")
                        .WithMany()
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Salon");
                });
#pragma warning restore 612, 618
        }
    }
}
